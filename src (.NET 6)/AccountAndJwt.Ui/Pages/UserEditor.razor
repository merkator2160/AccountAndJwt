@using ButtonType = Blazorise.ButtonType
@using DataGridEditMode = Blazorise.DataGrid.DataGridEditMode

<PageTitle>User editor</PageTitle>
<PageProgress @ref="@_pageProgress" Visible="@_inProgress" Color="Color.Primary"/>

<h3>User editor</h3>

<Row>
    <Column ColumnSize="ColumnSize.IsFull">
        <DataGrid @ref="_dataGrid"
                  TItem="GridUserVm"
                  Data="@_userList"
                  TotalItems="@_totalUsers"
                  @bind-SelectedRow="@_selectedUser"
                  PageSize="10"
                  ReadData="@OnReadDataAsync"
                  NewItemDefaultSetter="@OnValueNewItemDefaultSetter"
                  RowRemoved="@OnRowRemovedAsync"
                  RowInserted="@OnRowInsertedAsync"
                  ShowPager
                  CommandMode="@DataGridCommandMode.ButtonRow"
                  Editable
                  EditMode="@DataGridEditMode.Popup"
                  UseValidation
                  Responsive>
            <DataGridColumns>
                <DataGridCommandColumn/>
                <DataGridColumn Field="@nameof(GridUserVm.Id)" Caption="#" />
                <DataGridColumn Field="@nameof(GridUserVm.Login)" Caption="@nameof(GridUserVm.Login)" Editable/>
                <DataGridColumn Field="@nameof(GridUserVm.Password)" Caption="@nameof(GridUserVm.Password)" Editable />
                <DataGridColumn Field="@nameof(GridUserVm.FirstName)" Caption="@nameof(GridUserVm.FirstName)" Editable/>
                <DataGridColumn Field="@nameof(GridUserVm.LastName)" Caption="@nameof(GridUserVm.LastName)" Editable/>
                <DataGridColumn Field="@nameof(GridUserVm.Email)" Caption="@nameof(GridUserVm.Email)" Editable/>
            </DataGridColumns>
            <ButtonRowTemplate>
                <Button Color="Color.Success" Disabled="@_inProgress" Clicked="context.NewCommand.Clicked">New</Button>
                <Button Color="Color.Danger" Disabled="@(_selectedUser is null)" Clicked="context.DeleteCommand.Clicked">Delete</Button>
                <Button Color="Color.Primary" Disabled="@(_selectedUser is null)" Clicked="@ShowEditPermissionsModal">Edit permissions</Button>
            </ButtonRowTemplate>
        </DataGrid>
    </Column>
</Row>

<Row>
    <Column ColumnSize="ColumnSize.IsFull">
        <Alert Color="Color.Danger" Visible="@(!String.IsNullOrEmpty(_errorMessage))">
            <AlertMessage>Server validation error:</AlertMessage>
            <AlertDescription>@_errorMessage</AlertDescription>
        </Alert>
    </Column>
</Row>

<Modal @ref="_editPermissionsModal">
    <ModalContent Centered>
        <ModalHeader>
            <ModalTitle>Edit permissions</ModalTitle>
            <CloseButton />
        </ModalHeader>
        <ModalBody>
            <Field>
                <FieldLabel>Available roles</FieldLabel>
                <ListView TItem="RoleAm"
                          Data="@_availableRoles"
                          TextField="(role) => role.Name"
                          Mode="ListGroupMode.Selectable"
                          MaxHeight="300px"
                          @bind-SelectedItem="@_selectedRole">
                </ListView>
            </Field>
            <Field>
                <Button Color="Color.Success" Disabled="@_inProgress" Clicked="@AddRole">Add</Button>
            </Field>
            <Field>
                <FieldLabel>User roles</FieldLabel>
                <ListView TItem="RoleAm"
                          Data="@_selectedUser?.RoleList"
                          TextField="(role) => role.Name"
                          Mode="ListGroupMode.Selectable"
                          MaxHeight="300px"
                          @bind-SelectedItem="@_selectedUserRole">
                </ListView>
            </Field>
            <Field>
                <Button Color="Color.Success" Disabled="@_inProgress" Clicked="@RemoveRole">Remove</Button>
            </Field>
        </ModalBody>
        <ModalFooter>
            <Button Color="Color.Secondary" Clicked="@HideEditPermissionsModal">Close</Button>
        </ModalFooter>
    </ModalContent>
</Modal>